{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yuvraj Sonal\\\\Desktop\\\\todo-list\\\\frontend\\\\src\\\\components\\\\TodoList.js\",\n  _s = $RefreshSig$();\n// src/components/TodoList.js\nimport React, { useState, useEffect } from 'react';\nimport Todo from './Todo';\nimport AddTodo from './AddTodo';\nimport axios from 'axios';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  const fetchTodos = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/todos');\n      setTodos(response.data);\n    } catch (error) {\n      console.error('Error fetching todos', error);\n    }\n  };\n  const addTodo = async todo => {\n    try {\n      const response = await axios.post('http://localhost:8080/api/todos', todo);\n      setTodos([...todos, response.data]);\n    } catch (error) {\n      console.error('Error adding todo', error);\n    }\n  };\n  const deleteTodo = async id => {\n    try {\n      await axios.delete(`http://localhost:8080/api/todos/${id}`);\n      setTodos(todos.filter(todo => todo.id !== id));\n    } catch (error) {\n      console.error('Error deleting todo', error);\n    }\n  };\n  const toggleComplete = async id => {\n    try {\n      const todoToUpdate = todos.find(todo => todo.id === id);\n      const updatedTodo = {\n        ...todoToUpdate,\n        completed: !todoToUpdate.completed\n      };\n      await axios.put(`http://localhost:8080/api/todos/${id}`, updatedTodo);\n      const updatedTodos = todos.map(todo => todo.id === id ? updatedTodo : todo);\n      setTodos(updatedTodos);\n    } catch (error) {\n      console.error('Error updating todo', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoListWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTodo, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TodoList\",\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n        todo: todo,\n        deleteTodo: deleteTodo,\n        toggleComplete: toggleComplete\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","Todo","AddTodo","axios","jsxDEV","_jsxDEV","TodoList","_s","todos","setTodos","fetchTodos","response","get","data","error","console","addTodo","todo","post","deleteTodo","id","delete","filter","toggleComplete","todoToUpdate","find","updatedTodo","completed","put","updatedTodos","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Yuvraj Sonal/Desktop/todo-list/frontend/src/components/TodoList.js"],"sourcesContent":["// src/components/TodoList.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport Todo from './Todo';\r\nimport AddTodo from './AddTodo';\r\nimport axios from 'axios';\r\nimport '../index.css';\r\n\r\nconst TodoList = () => {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchTodos();\r\n  }, []);\r\n\r\n  const fetchTodos = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:8080/api/todos');\r\n      setTodos(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching todos', error);\r\n    }\r\n  };\r\n\r\n  const addTodo = async (todo) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/api/todos', todo);\r\n      setTodos([...todos, response.data]);\r\n    } catch (error) {\r\n      console.error('Error adding todo', error);\r\n    }\r\n  };\r\n\r\n  const deleteTodo = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:8080/api/todos/${id}`);\r\n      setTodos(todos.filter(todo => todo.id !== id));\r\n    } catch (error) {\r\n      console.error('Error deleting todo', error);\r\n    }\r\n  };\r\n\r\n  const toggleComplete = async (id) => {\r\n    try {\r\n      const todoToUpdate = todos.find(todo => todo.id === id);\r\n      const updatedTodo = { ...todoToUpdate, completed: !todoToUpdate.completed };\r\n      await axios.put(`http://localhost:8080/api/todos/${id}`, updatedTodo);\r\n      const updatedTodos = todos.map(todo => (todo.id === id ? updatedTodo : todo));\r\n      setTodos(updatedTodos);\r\n    } catch (error) {\r\n      console.error('Error updating todo', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"TodoListWrapper\">\r\n      <h2>Todo List</h2>\r\n      <AddTodo addTodo={addTodo} />\r\n      <div className=\"TodoList\">\r\n        {todos.map(todo => (\r\n          <Todo\r\n            key={todo.id}\r\n            todo={todo}\r\n            deleteTodo={deleteTodo}\r\n            toggleComplete={toggleComplete}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}