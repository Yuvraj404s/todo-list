{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yuvraj Sonal\\\\Desktop\\\\todo-list\\\\frontend\\\\src\\\\components\\\\Todo.js\",\n  _s = $RefreshSig$();\n// src/components/Todo.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todo = ({\n  todo,\n  deleteTodo,\n  refreshTodos\n}) => {\n  _s();\n  const [completed, setCompleted] = useState(todo.completed);\n  const handleToggle = async () => {\n    try {\n      const updatedTodo = {\n        ...todo,\n        completed: !completed\n      };\n      await axios.put(`http://localhost:8080/api/todos/${todo.id}`, updatedTodo);\n      setCompleted(!completed); // Toggle completed state locally\n      refreshTodos(); // Refresh todos after successful update\n    } catch (error) {\n      console.error('Error updating todo:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `TodoItem ${completed ? 'completed' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: todo.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => deleteTodo(todo.id),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), completed ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"completed-text\",\n      children: \"Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleToggle,\n      children: \"Mark Complete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Todo, \"52s1iJdCH712ENZ34EYLiScyRBU=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Todo","todo","deleteTodo","refreshTodos","_s","completed","setCompleted","handleToggle","updatedTodo","put","id","error","console","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Yuvraj Sonal/Desktop/todo-list/frontend/src/components/Todo.js"],"sourcesContent":["// src/components/Todo.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Todo = ({ todo, deleteTodo, refreshTodos }) => {\r\n  const [completed, setCompleted] = useState(todo.completed);\r\n\r\n  const handleToggle = async () => {\r\n    try {\r\n      const updatedTodo = { ...todo, completed: !completed };\r\n      await axios.put(`http://localhost:8080/api/todos/${todo.id}`, updatedTodo);\r\n      setCompleted(!completed); // Toggle completed state locally\r\n      refreshTodos(); // Refresh todos after successful update\r\n    } catch (error) {\r\n      console.error('Error updating todo:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`TodoItem ${completed ? 'completed' : ''}`}>\r\n      <span>{todo.title}</span>\r\n      <button onClick={() => deleteTodo(todo.id)}>Delete</button>\r\n      {completed ? (\r\n        <span className=\"completed-text\">Completed</span>\r\n      ) : (\r\n        <button onClick={handleToggle}>Mark Complete</button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAC;EAAEC,IAAI;EAAEC,UAAU;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAACK,IAAI,CAACI,SAAS,CAAC;EAE1D,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,WAAW,GAAG;QAAE,GAAGP,IAAI;QAAEI,SAAS,EAAE,CAACA;MAAU,CAAC;MACtD,MAAMR,KAAK,CAACY,GAAG,CAAC,mCAAmCR,IAAI,CAACS,EAAE,EAAE,EAAEF,WAAW,CAAC;MAC1EF,YAAY,CAAC,CAACD,SAAS,CAAC,CAAC,CAAC;MAC1BF,YAAY,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKc,SAAS,EAAE,YAAYR,SAAS,GAAG,WAAW,GAAG,EAAE,EAAG;IAAAS,QAAA,gBACzDf,OAAA;MAAAe,QAAA,EAAOb,IAAI,CAACc;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACzBpB,OAAA;MAAQqB,OAAO,EAAEA,CAAA,KAAMlB,UAAU,CAACD,IAAI,CAACS,EAAE,CAAE;MAAAI,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC1Dd,SAAS,gBACRN,OAAA;MAAMc,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,gBAEjDpB,OAAA;MAAQqB,OAAO,EAAEb,YAAa;MAAAO,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACrD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACf,EAAA,CAzBIJ,IAAI;AAAAqB,EAAA,GAAJrB,IAAI;AA2BV,eAAeA,IAAI;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}